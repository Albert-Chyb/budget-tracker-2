create table "public"."categories_colors" (
    "colorId" bigint generated by default as identity not null,
    "rgb" text not null,
    "name" text not null
);


alter table "public"."categories_colors" enable row level security;

CREATE UNIQUE INDEX categories_colors_pkey ON public.categories_colors USING btree ("colorId");

CREATE UNIQUE INDEX categories_colors_rgb_key ON public.categories_colors USING btree (rgb);

alter table "public"."categories_colors" add constraint "categories_colors_pkey" PRIMARY KEY using index "categories_colors_pkey";

alter table "public"."categories_colors" add constraint "categories_colors_name_check" CHECK (((length(name) >= 3) AND (length(name) <= 32))) not valid;

alter table "public"."categories_colors" validate constraint "categories_colors_name_check";

alter table "public"."categories_colors" add constraint "categories_colors_rgb_check" CHECK (((length(rgb) = 9) AND (((SUBSTRING(rgb FROM 1 FOR 3))::integer >= 0) AND ((SUBSTRING(rgb FROM 1 FOR 3))::integer <= 255)) AND (((SUBSTRING(rgb FROM 4 FOR 3))::integer >= 0) AND ((SUBSTRING(rgb FROM 4 FOR 3))::integer <= 255)) AND (((SUBSTRING(rgb FROM 7 FOR 3))::integer >= 0) AND ((SUBSTRING(rgb FROM 7 FOR 3))::integer <= 255)))) not valid;

alter table "public"."categories_colors" validate constraint "categories_colors_rgb_check";

alter table "public"."categories_colors" add constraint "categories_colors_rgb_key" UNIQUE using index "categories_colors_rgb_key";

grant delete on table "public"."categories_colors" to "anon";

grant insert on table "public"."categories_colors" to "anon";

grant references on table "public"."categories_colors" to "anon";

grant select on table "public"."categories_colors" to "anon";

grant trigger on table "public"."categories_colors" to "anon";

grant truncate on table "public"."categories_colors" to "anon";

grant update on table "public"."categories_colors" to "anon";

grant delete on table "public"."categories_colors" to "authenticated";

grant insert on table "public"."categories_colors" to "authenticated";

grant references on table "public"."categories_colors" to "authenticated";

grant select on table "public"."categories_colors" to "authenticated";

grant trigger on table "public"."categories_colors" to "authenticated";

grant truncate on table "public"."categories_colors" to "authenticated";

grant update on table "public"."categories_colors" to "authenticated";

grant delete on table "public"."categories_colors" to "service_role";

grant insert on table "public"."categories_colors" to "service_role";

grant references on table "public"."categories_colors" to "service_role";

grant select on table "public"."categories_colors" to "service_role";

grant trigger on table "public"."categories_colors" to "service_role";

grant truncate on table "public"."categories_colors" to "service_role";

grant update on table "public"."categories_colors" to "service_role";

create policy "Allow read access for authenticated users"
on "public"."categories_colors"
as permissive
for select
to authenticated
using (true);



